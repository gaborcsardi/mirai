% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel.R
\name{make_cluster}
\alias{make_cluster}
\alias{stop_cluster}
\title{Make Mirai Cluster}
\usage{
make_cluster(n, url = NULL, ssh = list(nodes = character(), port = 22), ...)

stop_cluster(cl)
}
\arguments{
\item{n}{if specified, the integer number of local nodes to launch.}

\item{url}{if specified, the character URL on the host for remote nodes to
dial into, including a port accepting incoming connections, e.g.
'tcp://192.168.0.2:5555'. Specify a URL starting 'tls+tcp://' for secure
TLS connections.}

\item{ssh}{(if 'url' is specified) a named list with 'nodes' being a character
vector of hostnames or IP addresses of remote machines on which to launch
nodes, e.g. \code{c('192.168.0.1', 'nodename')}, and optionally 'port' as
the numeric port number on which to connect (defaults to standard SSH port
22 if not specified).}

\item{...}{additional arguments passed onto \code{\link{daemons}}.}

\item{cl}{a 'miraiCluster'.}

\item{port}{(if 'url' is specified) the port over which to connect via SSH
(defaults to 22).}
}
\value{
For \strong{make_cluster}: An object of class 'miraiCluster' and
    'cluster'. Each 'miraiCluster' has an automatically assigned ID and 'n'
    nodes of class 'miraiNode'.

    For \strong{stop_cluster}: invisible NULL.
}
\description{
\code{make_cluster} creates a cluster of type 'miraiCluster', which may be
    used as a cluster object for any function in the \pkg{parallel} base
    package such as \code{\link[parallel]{clusterApply}} or
    \code{\link[parallel]{parLapply}}.

\code{stop_cluster} stops a cluster created by \code{make_cluster}.
}
\details{
The defaults correspond most closely to existing usage in the
    \pkg{parallel} package, although '...' arguments are passed onto
    \code{\link{daemons}} for additional customisation if desired.

    Note: requires R >= 4.4 (currently R-devel). Methods will not work with
    prior R versions.
}
\examples{
if (interactive()) {
# Only run examples in interactive R sessions

cl <- make_cluster(2)
cl
cl[[1L]]
stop_cluster(cl)

cl <- tryCatch(
  make_cluster(
    # host URL accessible to nodes
    url = "tcp://10.75.37.40:5555",
    # node IP / hostnames to connect to with custom port number
    ssh = list(nodes = c("10.75.37.90", "10.75.37.91"), port = 222)
  )
, error = identity)
if (inherits(cl, "cluster")) stop_cluster(cl)

}

}
