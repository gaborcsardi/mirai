% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mirai.R
\name{ssh_args}
\alias{ssh_args}
\title{SSH Arguments Constructor}
\usage{
ssh_args(names, port = 22, timeout = 5, tunnel = FALSE)
}
\arguments{
\item{names}{a character vector of hostnames or IP addresses of the remote
machines on which to launch daemons (nodes), e.g.
\code{c('10.75.37.90', 'nodename')}.}

\item{port}{[default 22] numeric port number on which to connect.}

\item{timeout}{[default 5] maximum time allowed for connection setup in seconds.}

\item{tunnel}{[default FALSE] logical value whether to use SSH reverse
tunnelling. If TRUE, a tunnel is created between the same local and
remote port specified as part of 'url' of the function where this is
being used as an argument. 'url' in this case must be either 'localhost'
or '127.0.0.1'. This is as the host listens at 'url' on the local machine,
whilst the nodes dial into the same 'url' on the remote machine, and the
SSH tunnel connects both ends.}
}
\value{
A list of character vectors the same length as 'names'.
}
\description{
Return value may be supplied directly to the 'args' argument of
    \code{\link{launch_remote}} or \code{\link{make_cluster}}.
}
\details{
By default, uses the SSH flags -f to background the SSH process and
    -T to not require a tty for efficiency.

    For simplicity, this SSH tunnelling implementation uses the same port
    on both the side of the host and that of the corresponding node.
}
\note{
This function only returns the relevant SSH arguments; 'command' must
    also be specified as 'ssh' or the path to the SSH application.
}
\examples{
ssh_args(names = c("10.75.37.90", "nodename"), port = 222, timeout = 10)

}
