% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mirai.R
\name{launch_local}
\alias{launch_local}
\alias{launch_remote}
\title{Launch Daemon}
\usage{
launch_local(url, ..., .compute = "default")

launch_remote(url, ..., .compute = "default", command = NULL, args = NULL)
}
\arguments{
\item{url}{the character host URL or vector of host URLs, including the port
    to connect to (and optionally for websockets, a path), e.g.
    tcp://192.168.0.2:5555' or 'ws://192.168.0.2:5555/path'

    \strong{or} integer index value, or vector of index values, of the
    dispatcher URLs (where applicable).}

\item{...}{(optional) additional arguments passed to \code{\link{daemon}}
(see 'additional arguments' section below).}

\item{.compute}{[default 'default'] character compute profile (each compute
profile has its own set of daemons for connecting to different resources).}

\item{command}{(optional) the command used to effect the daemon launch on the
remote machine (e.g. 'ssh').}

\item{args}{(optional) additional arguments passed to 'command' (e.g. for SSH,
the port number, hostname etc. such as '-p 22 192.168.0.2').}
}
\value{
For \strong{launch_local}: Invisible NULL.

For \strong{launch_remote}: A character vector the same length as 'url'.
}
\description{
\code{launch_local} spawns a new background \code{Rscript} process calling
    \code{\link{daemon}} with the specified arguments. May be used to
    re-launch daemons that have timed out on the local machine.

\code{launch_remote} returns the shell command for launching daemons as a
    character vector. If 'command' is specified, this is executed with both
    'args' and the returned daemons launch command as arguments, to actually
    effect the daemon launch on the remote machine.
}
\section{Additional arguments}{


    Additional arguments may be specified as part of '\code{...}' to be
    passed on to \code{\link{daemon}}:

    \itemize{
    \item{\strong{asyncdial}} {[default FALSE] whether to perform dials
    asynchronously. The default FALSE will error if a connection is not
    immediately possible (e.g. \code{\link{daemons}} has yet to be called, or
    the specified port is not open etc.). Specifying TRUE continues retrying
    (indefinitely) if not immediately successful, which is more resilient but
    can mask potential connection issues.}
    \item{\strong{output}} {[default FALSE] Specify as TRUE to provide
    redirection of output (stdout and stderr) from the daemon to the host
    process. This option is only applicable for local daemons when not using
    dispatcher.}
    }

    Zero-configuration TLS certificates generated by \code{\link{daemons}}
    are automatically passed to the daemon. In this case, there is no need to
    specify 'tls' as part of '\code{...}'.
}

\section{Rscript in shell commands}{


    Shell commands returned by \code{launch_remote} use an assumed 'Rscript'
    executable, and is not necessarily the same command that would be executed
    by \code{launch_local}. This is to facilitate launching on remote
    resources, as the location of this executable may differ between machines.

    The implicit assumption is that 'Rscript' has been set on the executable
    search path - prepend the full path for 'Rscript' if necessary.

    If launching on Windows, 'Rscript' should be changed to 'Rscript.exe'.
}

\examples{
if (interactive()) {
# Only run examples in interactive R sessions

daemons(url = "ws://[::1]:0", dispatcher = FALSE)
status()
launch_local(status()$daemons, maxtasks = 10L)
launch_remote(status()$daemons, maxtasks = 10L)
Sys.sleep(1)
status()
daemons(0)

daemons(n = 2L, url = "tls+tcp://[::1]:0")
status()
launch_local(1:2, idletime = 60000L, timerstart = 1L)
launch_remote(1:2, idletime = 60000L, timerstart = 1L)
Sys.sleep(1)
status()
daemons(0)

}

}
