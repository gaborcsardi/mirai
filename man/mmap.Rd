% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functional.R
\name{mmap}
\alias{mmap}
\title{mirai Map}
\usage{
mmap(.x, .f, ..., .args = list(), .stop = TRUE, .compute = "default")
}
\arguments{
\item{.x}{a list, atomic vector, or an expression object.}

\item{.f}{a function to be applied to each element of \code{.x}.}

\item{...}{optional arguments to \code{.f}.}

\item{.args}{optional arguments to \code{.f} provided as a list.}

\item{.stop}{[default TRUE] whether to perform early stopping if an error is
returned. If FALSE, all errors are returned as 'miraiError' /
'errorValue' as the case may be.}

\item{.compute}{[default 'default'] character value for the compute profile
to use (each compute profile has its own independent set of daemons).}
}
\value{
A list (the same length as \code{.x}, preserving names).
}
\description{
Map a function over a list or vector using \pkg{mirai}.
}
\details{
This function sends each application of \code{.f} on an element of
    \code{.x} for computation in a separate \code{\link{mirai}} call, and
    waits for completion.

    Early stopping is performed, so if an 'errorValue' is returned, an error
    is thrown without waiting for remaining computations to complete.

    Note: daemons must also have been previously set with a call to
    \code{\link{daemons}}.
}
\examples{
with(
  daemons(1, dispatcher = FALSE),
  mmap(1:3, rnorm, mean = 20, .args = list(sd = 2))
)

}
