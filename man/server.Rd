% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mirai.R
\name{server}
\alias{server}
\title{mirai Server (Async Executor Daemon)}
\usage{
server(
  url,
  nodes = NULL,
  asyncdial = TRUE,
  maxtasks = Inf,
  idletime = Inf,
  walltime = Inf,
  timerstart = 0L,
  ...,
  pollfreqh = 5L,
  pollfreql = 50L
)
}
\arguments{
\item{url}{the client URL as a character string, including the port to
connect to and (optionally) a path for websocket URLs e.g.
'tcp://192.168.0.2:5555' or 'ws://192.168.0.2:5555/path'.}

\item{nodes}{[default NULL] if supplied, this server instance will run as an
active queue (task scheduler) with the specified number of nodes.}

\item{asyncdial}{[default TRUE] whether to dial in to the client
asynchronously. An asynchronous dial is more resilient and will continue
retrying if not immediately successful. However this can mask potential
connection issues and specifying FALSE is useful for debugging purposes,
producing an error if a connection is not immediately possible (e.g.
\code{\link{daemons}} has yet to be called on the client, or the
specified port is not open etc.).}

\item{maxtasks}{[default Inf] (applicable to severs/nodes) the maximum number
of tasks to execute (task limit) before exiting.}

\item{idletime}{[default Inf] (applicable to severs/nodes) maximum idle time,
since completion of the last task (in milliseconds) before exiting.}

\item{walltime}{[default Inf] (applicable to severs/nodes) soft walltime, or
the minimum amount of real time taken (in milliseconds) before exiting.}

\item{timerstart}{[default 0L] (applicable to severs/nodes) number of
completed tasks after which to start the timer for 'idletime' and
'walltime'. 0L implies timers are started upon server launch.}

\item{...}{reserved but not currently used.}

\item{pollfreqh}{[default 5L] (applicable to active queues only) the high
polling frequency for the queue in milliseconds (used when there are
active tasks). Setting a lower value will be more responsive but at the
cost of consuming more resources on the queue thread.}

\item{pollfreql}{[default 50L] (applicable to active queues only) the low
polling frequency for the queue in milliseconds (used when there are no
active tasks). Setting a lower value will be more responsive but at the
cost of consuming more resources on the queue thread.}
}
\value{
Invisible NULL.
}
\description{
Implements a persistent executor/server for the remote process. Awaits data,
    evaluates an expression in an environment containing the supplied data,
    and returns the result to the caller/client.
}
\details{
The network topology is such that server daemons dial into the
    client, which listens at the '.url' address. In this way, network
    resources may be easily added or removed at any time and the client
    automatically distributes tasks to all available servers.

    If 'nodes' is supplied, this daemon is launched as an active server queue,
    directing a cluster with the specified number of nodes. The nodes are
    launched automatically as processes on the same machine.

    An active server queue may be used in combination with other servers or
    server queues.
}
